Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    STRING

Grammar

Rule 0     S' -> for_loop
Rule 1     for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

Terminals, with rules where they appear

DOT                  : 1 1
EQUALS               : 1
FOR                  : 1
ID                   : 1 1 1 1 1 1 1
INT                  : 1
LBRACE               : 1
LEQ                  : 1
LPAREN               : 1 1
NUM                  : 1 1 1
PLUS                 : 1 1 1
RBRACE               : 1
RPAREN               : 1 1
SEMICOLON            : 1 1 1
STRING               : 
error                : 

Nonterminals, with rules where they appear

for_loop             : 0

Parsing method: LALR

state 0

    (0) S' -> . for_loop
    (1) for_loop -> . FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    FOR             shift and go to state 2

    for_loop                       shift and go to state 1

state 1

    (0) S' -> for_loop .



state 2

    (1) for_loop -> FOR . LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    LPAREN          shift and go to state 3


state 3

    (1) for_loop -> FOR LPAREN . INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    INT             shift and go to state 4


state 4

    (1) for_loop -> FOR LPAREN INT . ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 5


state 5

    (1) for_loop -> FOR LPAREN INT ID . EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    EQUALS          shift and go to state 6


state 6

    (1) for_loop -> FOR LPAREN INT ID EQUALS . NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    NUM             shift and go to state 7


state 7

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM . SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    SEMICOLON       shift and go to state 8


state 8

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON . ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 9


state 9

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID . LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    LEQ             shift and go to state 10


state 10

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ . NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    NUM             shift and go to state 11


state 11

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM . SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    SEMICOLON       shift and go to state 12


state 12

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON . ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 13


state 13

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID . PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    PLUS            shift and go to state 14


state 14

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS . PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    PLUS            shift and go to state 15


state 15

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS . RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    RPAREN          shift and go to state 16


state 16

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN . LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    LBRACE          shift and go to state 17


state 17

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE . ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 18


state 18

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID . DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    DOT             shift and go to state 19


state 19

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT . ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 20


state 20

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID . DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    DOT             shift and go to state 21


state 21

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT . ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 22


state 22

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID . LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE

    LPAREN          shift and go to state 23


state 23

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN . ID PLUS NUM RPAREN SEMICOLON RBRACE

    ID              shift and go to state 24


state 24

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID . PLUS NUM RPAREN SEMICOLON RBRACE

    PLUS            shift and go to state 25


state 25

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS . NUM RPAREN SEMICOLON RBRACE

    NUM             shift and go to state 26


state 26

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM . RPAREN SEMICOLON RBRACE

    RPAREN          shift and go to state 27


state 27

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 28


state 28

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON . RBRACE

    RBRACE          shift and go to state 29


state 29

    (1) for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE .

    $end            reduce using rule 1 (for_loop -> FOR LPAREN INT ID EQUALS NUM SEMICOLON ID LEQ NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE ID DOT ID DOT ID LPAREN ID PLUS NUM RPAREN SEMICOLON RBRACE .)

